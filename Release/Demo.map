Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_divmodhi4.o)
                              ./src/main.o (__divmodhi4)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega88.o (exit)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
                              ./src/main.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_divmodhi4.o) (__udivmodhi4)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega88.o
LOAD ./src/Strings.o
LOAD ./src/main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega88.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x526
 *(.vectors)
 .vectors       0x0000000000000000       0x34 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega88.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000034                . = ALIGN (0x2)
                0x0000000000000034                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000034        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000034                __trampolines_end = .
 *(.progmem*)
 .progmem.data.i2c_help
                0x0000000000000034       0xa9 ./src/Strings.o
                0x0000000000000034                i2c_help
 .progmem.data.i2c_menu
                0x00000000000000dd        0xd ./src/Strings.o
                0x00000000000000dd                i2c_menu
 .progmem.data.main_menu
                0x00000000000000ea       0x4a ./src/Strings.o
                0x00000000000000ea                main_menu
 .progmem.data.welcome_user
                0x0000000000000134       0x11 ./src/Strings.o
                0x0000000000000134                welcome_user
                0x0000000000000146                . = ALIGN (0x2)
 *fill*         0x0000000000000145        0x1 
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000146                __ctors_start = .
 *(.ctors)
                0x0000000000000146                __ctors_end = .
                0x0000000000000146                __dtors_start = .
 *(.dtors)
                0x0000000000000146                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000146        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega88.o
                0x0000000000000146                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000146        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega88.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000152       0x16 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
                0x0000000000000152                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000168        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega88.o
 *(.init9)
 *(.text)
 .text          0x000000000000016c        0x2 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega88.o
                0x000000000000016c                __vector_22
                0x000000000000016c                __vector_1
                0x000000000000016c                __vector_24
                0x000000000000016c                __vector_12
                0x000000000000016c                __bad_interrupt
                0x000000000000016c                __vector_6
                0x000000000000016c                __vector_3
                0x000000000000016c                __vector_23
                0x000000000000016c                __vector_25
                0x000000000000016c                __vector_11
                0x000000000000016c                __vector_13
                0x000000000000016c                __vector_17
                0x000000000000016c                __vector_19
                0x000000000000016c                __vector_7
                0x000000000000016c                __vector_5
                0x000000000000016c                __vector_4
                0x000000000000016c                __vector_9
                0x000000000000016c                __vector_2
                0x000000000000016c                __vector_21
                0x000000000000016c                __vector_15
                0x000000000000016c                __vector_8
                0x000000000000016c                __vector_14
                0x000000000000016c                __vector_10
                0x000000000000016c                __vector_16
                0x000000000000016c                __vector_18
                0x000000000000016c                __vector_20
 .text          0x000000000000016e        0x0 ./src/Strings.o
 .text          0x000000000000016e        0x0 ./src/main.o
 .text          0x000000000000016e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_divmodhi4.o)
 .text          0x000000000000016e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text          0x000000000000016e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text          0x000000000000016e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_udivmodhi4.o)
                0x000000000000016e                . = ALIGN (0x2)
 *(.text.*)
 .text.delay_ms
                0x000000000000016e       0x16 ./src/main.o
                0x000000000000016e                delay_ms
 .text.LedBlink
                0x0000000000000184       0x28 ./src/main.o
                0x0000000000000184                LedBlink
 .text.endloop  0x00000000000001ac       0x12 ./src/main.o
                0x00000000000001ac                endloop
 .text.UARTInit
                0x00000000000001be       0x18 ./src/main.o
                0x00000000000001be                UARTInit
 .text.UARTReceive
                0x00000000000001d6        0xe ./src/main.o
                0x00000000000001d6                UARTReceive
 .text.UARTSendByte
                0x00000000000001e4        0xe ./src/main.o
                0x00000000000001e4                UARTSendByte
 .text.UARTSendString
                0x00000000000001f2       0x16 ./src/main.o
                0x00000000000001f2                UARTSendString
 .text.UARTSendString_P
                0x0000000000000208       0x1a ./src/main.o
                0x0000000000000208                UARTSendString_P
 .text.UARTSendInt
                0x0000000000000222       0x8a ./src/main.o
                0x0000000000000222                UARTSendInt
 .text.SPIInit  0x00000000000002ac        0xe ./src/main.o
                0x00000000000002ac                SPIInit
 .text.SPISendByte
                0x00000000000002ba        0xc ./src/main.o
                0x00000000000002ba                SPISendByte
 .text.softspi_init
                0x00000000000002c6        0x8 ./src/main.o
                0x00000000000002c6                softspi_init
 .text.softspi_send
                0x00000000000002ce       0x82 ./src/main.o
                0x00000000000002ce                softspi_send
 .text.lcd_send
                0x0000000000000350       0x3a ./src/main.o
                0x0000000000000350                lcd_send
 .text.lcd_init
                0x000000000000038a       0x2e ./src/main.o
                0x000000000000038a                lcd_init
 .text.lcd_string
                0x00000000000003b8       0x18 ./src/main.o
                0x00000000000003b8                lcd_string
 .text.i2c_init
                0x00000000000003d0        0xc ./src/main.o
                0x00000000000003d0                i2c_init
 .text.i2c_start
                0x00000000000003dc       0x44 ./src/main.o
                0x00000000000003dc                i2c_start
 .text.i2c_start_wait
                0x0000000000000420       0x4e ./src/main.o
                0x0000000000000420                i2c_start_wait
 .text.i2c_rep_start
                0x000000000000046e        0x2 ./src/main.o
                0x000000000000046e                i2c_rep_start
 .text.i2c_stop
                0x0000000000000470       0x10 ./src/main.o
                0x0000000000000470                i2c_stop
 .text.i2c_write
                0x0000000000000480       0x22 ./src/main.o
                0x0000000000000480                i2c_write
 .text.i2c_readAck
                0x00000000000004a2       0x14 ./src/main.o
                0x00000000000004a2                i2c_readAck
 .text.i2c_readNak
                0x00000000000004b6       0x14 ./src/main.o
                0x00000000000004b6                i2c_readNak
 .text.startup.main
                0x00000000000004ca        0xa ./src/main.o
                0x00000000000004ca                main
 .text.libgcc.mul
                0x00000000000004d4        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x00000000000004d4       0x26 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_divmodhi4.o)
                0x00000000000004d4                __divmodhi4
                0x00000000000004d4                _div
 .text.libgcc   0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000004fa        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000000000004fa       0x28 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_udivmodhi4.o)
                0x00000000000004fa                __udivmodhi4
 .text.libgcc   0x0000000000000522        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000522        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000522        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000522        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000522        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000000522                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000522        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                0x0000000000000522                exit
                0x0000000000000522                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000522        0x4 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000526                _etext = .

.data           0x0000000000800100        0x6 load address 0x0000000000000526
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega88.o
 .data          0x0000000000800100        0x0 ./src/Strings.o
 .data          0x0000000000800100        0x0 ./src/main.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.temp   0x0000000000800100        0x6 ./src/main.o
                0x0000000000800100                temp
 *(.gnu.linkonce.d*)
                0x0000000000800106                . = ALIGN (0x2)
                0x0000000000800106                _edata = .
                0x0000000000800106                PROVIDE (__data_end, .)

.bss            0x0000000000800106        0x0
                0x0000000000800106                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800106        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega88.o
 .bss           0x0000000000800106        0x0 ./src/Strings.o
 .bss           0x0000000000800106        0x0 ./src/main.o
 .bss           0x0000000000800106        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800106        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800106        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x0000000000800106        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800106                PROVIDE (__bss_end, .)
                0x0000000000000526                __data_load_start = LOADADDR (.data)
                0x000000000000052c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800106        0x0
                0x0000000000800106                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800106                PROVIDE (__noinit_end, .)
                0x0000000000800106                _end = .
                0x0000000000800106                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./src/Strings.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./src/main.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega88.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(Demo.elf elf32-avr)
LOAD linker stubs
